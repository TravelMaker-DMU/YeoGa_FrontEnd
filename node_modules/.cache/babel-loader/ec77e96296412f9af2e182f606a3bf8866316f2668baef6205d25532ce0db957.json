{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\YeoGa_FrontEnd\\\\src\\\\page\\\\Setting\\\\Setting.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Setting = () => {\n  _s();\n  const [userInfo, setUserInfo] = useState(null);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      // 로컬 스토리지에서 accessToken 가져오기\n      const token = sessionStorage.getItem('accessToken');\n      if (!token) {\n        setError('토큰이 없습니다. 다시 로그인 해주세요.');\n        return;\n      }\n      try {\n        const response = await axios.get('http://localhost:3000/my/{username}', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setUserInfo(response.data);\n      } catch (error) {\n        console.error('사용자 정보를 가져오는 데 실패했습니다:', error);\n        setError('사용자 정보를 가져오는 데 실패했습니다.');\n      }\n    };\n    fetchUserInfo();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  if (!userInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC0AC\\uC6A9\\uC790 \\uC815\\uBCF4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC774\\uB984: \", userInfo.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC774\\uBA54\\uC77C: \", userInfo.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC544\\uC774\\uB514: \", userInfo.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Setting, \"ISRhaFXWKkUf6XGDygRubLLuKVU=\");\n_c = Setting;\nexport default Setting;\nvar _c;\n$RefreshReg$(_c, \"Setting\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Setting","_s","userInfo","setUserInfo","error","setError","fetchUserInfo","token","sessionStorage","getItem","response","get","headers","Authorization","data","console","children","fileName","_jsxFileName","lineNumber","columnNumber","name","email","username","_c","$RefreshReg$"],"sources":["C:/Users/user/YeoGa_FrontEnd/src/page/Setting/Setting.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Setting = () => {\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchUserInfo = async () => {\r\n      // 로컬 스토리지에서 accessToken 가져오기\r\n      const token = sessionStorage.getItem('accessToken');\r\n\r\n      if (!token) {\r\n        setError('토큰이 없습니다. 다시 로그인 해주세요.');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/my/{username}', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        setUserInfo(response.data);\r\n      } catch (error) {\r\n        console.error('사용자 정보를 가져오는 데 실패했습니다:', error);\r\n        setError('사용자 정보를 가져오는 데 실패했습니다.');\r\n      }\r\n    };\r\n\r\n    fetchUserInfo();\r\n  }, []);\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  if (!userInfo) {\r\n    return <div>로딩 중...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>사용자 정보</h1>\r\n      <p>이름: {userInfo.name}</p>\r\n      <p>이메일: {userInfo.email}</p>\r\n      <p>아이디: {userInfo.username}</p>\r\n      {/* 추가로 필요한 정보들을 표 시 */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Setting;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC;MACA,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC;MAEnD,IAAI,CAACF,KAAK,EAAE;QACVF,QAAQ,CAAC,wBAAwB,CAAC;QAClC;MACF;MAEA,IAAI;QACF,MAAMK,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,qCAAqC,EAAE;UACtEC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUN,KAAK;UAChC;QACF,CAAC,CAAC;QACFJ,WAAW,CAACO,QAAQ,CAACI,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOV,KAAK,EAAE;QACdW,OAAO,CAACX,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CC,QAAQ,CAAC,wBAAwB,CAAC;MACpC;IACF,CAAC;IAEDC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,KAAK,EAAE;IACT,oBAAOL,OAAA;MAAAiB,QAAA,EAAMZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC3B;EAEA,IAAI,CAAClB,QAAQ,EAAE;IACb,oBAAOH,OAAA;MAAAiB,QAAA,EAAK;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC3B;EAEA,oBACErB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfrB,OAAA;MAAAiB,QAAA,GAAG,gBAAI,EAACd,QAAQ,CAACmB,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BrB,OAAA;MAAAiB,QAAA,GAAG,sBAAK,EAACd,QAAQ,CAACoB,KAAK;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BrB,OAAA;MAAAiB,QAAA,GAAG,sBAAK,EAACd,QAAQ,CAACqB,QAAQ;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5B,CAAC;AAEV,CAAC;AAACnB,EAAA,CA/CID,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AAiDb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}