{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\YeoGa_FrontEnd\\\\src\\\\page\\\\MapPage\\\\Tripsub\\\\Tripsub.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Map, Polyline, CustomOverlayMap } from 'react-kakao-maps-sdk';\nimport '../Tripsub/Tripsub.css';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KAKAO_API_KEY = '892b3fa8ad217de4b2ca0cae7c1ca67b';\nconst fetchDirections = async (origin, destination, waypoints) => {\n  try {\n    const response = await axios.post('https://apis-navi.kakaomobility.com/v1/waypoints/directions', {\n      origin: {\n        x: origin.lng,\n        y: origin.lat\n      },\n      destination: {\n        x: destination.lng,\n        y: destination.lat\n      },\n      waypoints: waypoints.map((point, index) => ({\n        name: `waypoint${index}`,\n        x: point.lng,\n        y: point.lat\n      })),\n      priority: 'RECOMMEND',\n      car_fuel: 'GASOLINE',\n      car_hipass: false,\n      alternatives: false,\n      road_details: false\n    }, {\n      headers: {\n        Authorization: `KakaoAK ${KAKAO_API_KEY}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching directions:', error);\n    return null;\n  }\n};\nconst Tripsub = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const routeData = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.routeData) || [];\n  const [route, setRoute] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (routeData.length >= 2) {\n      const [origin, ...waypoints] = routeData;\n      const destination = waypoints.pop(); // 마지막 경유지를 목적지로 사용\n\n      fetchDirections(origin, destination, waypoints).then(directions => {\n        if (directions && directions.routes) {\n          setRoute(directions.routes[0]);\n        } else {\n          setError('경로를 가져오는 데 실패했습니다.');\n        }\n      }).catch(err => setError('API 요청 중 오류가 발생했습니다.'));\n    } else {\n      setError('출발지와 목적지를 설정하세요.');\n    }\n  }, [routeData]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Tripsub-map\",\n    children: [/*#__PURE__*/_jsxDEV(Map, {\n      center: routeData[0] || {\n        lat: 37.5665,\n        lng: 126.9780\n      } // 기본값을 서울로 설정\n      ,\n      style: {\n        width: '75vw',\n        height: '100vh'\n      },\n      level: 3,\n      children: [routeData.map((point, index) => /*#__PURE__*/_jsxDEV(CustomOverlayMap, {\n        position: {\n          lat: point.lat,\n          lng: point.lng\n        },\n        yAnchor: 1,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'blue',\n            color: 'white',\n            borderRadius: '50%',\n            width: '30px',\n            height: '30px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontWeight: 'bold'\n          },\n          children: index === 0 ? '1' : index === routeData.length - 1 ? routeData.length : index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)), route && route.sections && /*#__PURE__*/_jsxDEV(Polyline, {\n        path: route.sections.flatMap(section => section.roads.flatMap(road => road.vertexes.reduce((acc, vertex, idx) => {\n          if (idx % 2 === 0) {\n            acc.push({\n              lng: vertex,\n              lat: road.vertexes[idx + 1]\n            });\n          }\n          return acc;\n        }, []))),\n        strokeWeight: 5,\n        strokeColor: \"black\",\n        strokeOpacity: 0.7,\n        strokeStyle: \"solid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aaa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(Tripsub, \"hwHW3wgX44mWKEYYU29HzznV5bw=\", false, function () {\n  return [useLocation];\n});\n_c = Tripsub;\nexport default Tripsub;\nvar _c;\n$RefreshReg$(_c, \"Tripsub\");","map":{"version":3,"names":["React","useState","useEffect","axios","Map","Polyline","CustomOverlayMap","useLocation","jsxDEV","_jsxDEV","KAKAO_API_KEY","fetchDirections","origin","destination","waypoints","response","post","x","lng","y","lat","map","point","index","name","priority","car_fuel","car_hipass","alternatives","road_details","headers","Authorization","data","error","console","Tripsub","_s","_location$state","location","routeData","state","route","setRoute","setError","length","pop","then","directions","routes","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","style","width","height","level","position","yAnchor","backgroundColor","color","borderRadius","display","alignItems","justifyContent","fontWeight","sections","path","flatMap","section","roads","road","vertexes","reduce","acc","vertex","idx","push","strokeWeight","strokeColor","strokeOpacity","strokeStyle","_c","$RefreshReg$"],"sources":["C:/Users/user/YeoGa_FrontEnd/src/page/MapPage/Tripsub/Tripsub.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Map, Polyline, CustomOverlayMap } from 'react-kakao-maps-sdk';\r\nimport '../Tripsub/Tripsub.css';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst KAKAO_API_KEY = '892b3fa8ad217de4b2ca0cae7c1ca67b';\r\n\r\nconst fetchDirections = async (origin, destination, waypoints) => {\r\n    try {\r\n        const response = await axios.post(\r\n            'https://apis-navi.kakaomobility.com/v1/waypoints/directions',\r\n            {\r\n                origin: { x: origin.lng, y: origin.lat },\r\n                destination: { x: destination.lng, y: destination.lat },\r\n                waypoints: waypoints.map((point, index) => ({\r\n                    name: `waypoint${index}`,\r\n                    x: point.lng,\r\n                    y: point.lat\r\n                })),\r\n                priority: 'RECOMMEND',\r\n                car_fuel: 'GASOLINE',\r\n                car_hipass: false,\r\n                alternatives: false,\r\n                road_details: false,\r\n            },\r\n            {\r\n                headers: {\r\n                    Authorization: `KakaoAK ${KAKAO_API_KEY}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n        );\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching directions:', error);\r\n        return null;\r\n    }\r\n};\r\n\r\nconst Tripsub = () => {\r\n    const location = useLocation();\r\n    const routeData = location.state?.routeData || [];\r\n\r\n    const [route, setRoute] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (routeData.length >= 2) {\r\n            const [origin, ...waypoints] = routeData;\r\n            const destination = waypoints.pop(); // 마지막 경유지를 목적지로 사용\r\n\r\n            fetchDirections(origin, destination, waypoints)\r\n                .then(directions => {\r\n                    if (directions && directions.routes) {\r\n                        setRoute(directions.routes[0]);\r\n                    } else {\r\n                        setError('경로를 가져오는 데 실패했습니다.');\r\n                    }\r\n                })\r\n                .catch(err => setError('API 요청 중 오류가 발생했습니다.'));\r\n        } else {\r\n            setError('출발지와 목적지를 설정하세요.');\r\n        }\r\n    }, [routeData]);\r\n\r\n    if (error) {\r\n        return <div className=\"error-message\">{error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"Tripsub-map\">\r\n            <Map\r\n                center={routeData[0] || { lat: 37.5665, lng: 126.9780 }} // 기본값을 서울로 설정\r\n                style={{ width: '75vw', height: '100vh' }}\r\n                level={3}\r\n            >\r\n                {routeData.map((point, index) => (\r\n                    <CustomOverlayMap\r\n                        key={index}\r\n                        position={{ lat: point.lat, lng: point.lng }}\r\n                        yAnchor={1}\r\n                    >\r\n                        <div style={{\r\n                            backgroundColor: 'blue',\r\n                            color: 'white',\r\n                            borderRadius: '50%',\r\n                            width: '30px',\r\n                            height: '30px',\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            fontWeight: 'bold',\r\n                        }}>\r\n                            {index === 0 ? '1' : index === routeData.length - 1 ? routeData.length : index + 1}\r\n                        </div>\r\n                    </CustomOverlayMap>\r\n                ))}\r\n\r\n                {route && route.sections && (\r\n                    <Polyline\r\n                        path={route.sections.flatMap(section =>\r\n                            section.roads.flatMap(road =>\r\n                                road.vertexes.reduce((acc, vertex, idx) => {\r\n                                    if (idx % 2 === 0) {\r\n                                        acc.push({ lng: vertex, lat: road.vertexes[idx + 1] });\r\n                                    }\r\n                                    return acc;\r\n                                }, [])\r\n                            )\r\n                        )}\r\n                        strokeWeight={5}\r\n                        strokeColor=\"black\"\r\n                        strokeOpacity={0.7}\r\n                        strokeStyle=\"solid\"\r\n                    />\r\n                )}\r\n            </Map>\r\n            <div className='aaa'></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tripsub;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}