{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\YeoGa_FrontEnd\\\\src\\\\page\\\\Test2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test2 = () => {\n  _s();\n  const [touristData, setTouristData] = useState([]);\n  const [error, setError] = useState(null);\n\n  // 인코딩 없이 순수한 API 키 사용\n  const serviceKey = encodeURIComponent('4oxzm8SHyrq9/pfIshPf04pcM/RLG7T+vbe5OuxsclilIPc2WjI6rmjSYNCVXutO3aboLiAAuHr01tiGOzviVg==');\n  const url = 'https://apis.data.go.kr/B551011/TarRlteTarService/areaBasedList';\n  const fetchTouristData = async () => {\n    try {\n      const response = await axios.get(url, {\n        params: {\n          serviceKey: serviceKey,\n          numOfRows: '10',\n          pageNo: '1',\n          MobileOS: 'ETC',\n          MobileApp: 'AppTest',\n          _type: 'json',\n          baseYm: '202404',\n          areaCd: '11',\n          sigunguCd: '11140'\n        }\n      });\n      console.log(\"API 응답 전체:\", response.data);\n      if (response.data && response.data.response && response.data.response.header) {\n        if (response.data.response.header.resultCode === \"0000\") {\n          setTouristData(response.data.response.body.items.item || []);\n          setError(null);\n        } else {\n          setError(`에러 코드 ${response.data.response.header.resultCode}: ${response.data.response.header.resultMsg}`);\n        }\n      } else {\n        setError('서버로부터 예상하지 못한 응답을 받았습니다.');\n      }\n    } catch (err) {\n      var _err$response, _err$response2, _err$response2$data, _err$response3, _err$response3$data;\n      console.error(\"Error:\", err);\n      console.error(\"Error response data:\", (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data);\n      if ((_err$response2 = err.response) !== null && _err$response2 !== void 0 && (_err$response2$data = _err$response2.data) !== null && _err$response2$data !== void 0 && _err$response2$data.includes('SERVICE KEY IS NOT REGISTERED ERROR')) {\n        setError('유효하지 않은 서비스 키입니다. 공공데이터 포털에서 올바른 키를 확인하세요.');\n      } else if ((_err$response3 = err.response) !== null && _err$response3 !== void 0 && (_err$response3$data = _err$response3.data) !== null && _err$response3$data !== void 0 && _err$response3$data.includes('Service Not Found')) {\n        setError('잘못된 API 요청입니다. URL과 파라미터를 확인하세요.');\n      } else {\n        setError('관광지 정보를 가져오는 데 실패했습니다.');\n      }\n      setTouristData([]);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchTouristData();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tourist-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uAD00\\uAD11\\uC9C0 \\uC815\\uBCF4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Get Tourist Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), touristData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tourist-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: touristData.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item.tAtsNm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uAE30\\uBCF8 \\uC8FC\\uC18C: \", item.rlteBsicAdres]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Test2, \"4M47c+xMWTaQ8/g247bU6xS8Hm4=\");\n_c = Test2;\nexport default Test2;\nvar _c;\n$RefreshReg$(_c, \"Test2\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Test2","_s","touristData","setTouristData","error","setError","serviceKey","encodeURIComponent","url","fetchTouristData","response","get","params","numOfRows","pageNo","MobileOS","MobileApp","_type","baseYm","areaCd","sigunguCd","console","log","data","header","resultCode","body","items","item","resultMsg","err","_err$response","_err$response2","_err$response2$data","_err$response3","_err$response3$data","includes","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","style","color","length","map","index","tAtsNm","rlteBsicAdres","_c","$RefreshReg$"],"sources":["C:/Users/user/YeoGa_FrontEnd/src/page/Test2.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Test2 = () => {\r\n  const [touristData, setTouristData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  // 인코딩 없이 순수한 API 키 사용\r\n  const serviceKey = encodeURIComponent('4oxzm8SHyrq9/pfIshPf04pcM/RLG7T+vbe5OuxsclilIPc2WjI6rmjSYNCVXutO3aboLiAAuHr01tiGOzviVg==');\r\n\r\n  const url = 'https://apis.data.go.kr/B551011/TarRlteTarService/areaBasedList';\r\n\r\n  const fetchTouristData = async () => {\r\n    try {\r\n      const response = await axios.get(url, {\r\n        params: {\r\n          serviceKey: serviceKey,\r\n          numOfRows: '10',\r\n          pageNo: '1',\r\n          MobileOS: 'ETC',\r\n          MobileApp: 'AppTest',\r\n          _type: 'json',\r\n          baseYm: '202404',\r\n          areaCd: '11',\r\n          sigunguCd: '11140'\r\n        }\r\n      });\r\n\r\n      console.log(\"API 응답 전체:\", response.data);\r\n\r\n      if (response.data && response.data.response && response.data.response.header) {\r\n        if (response.data.response.header.resultCode === \"0000\") {\r\n          setTouristData(response.data.response.body.items.item || []);\r\n          setError(null);\r\n        } else {\r\n          setError(`에러 코드 ${response.data.response.header.resultCode}: ${response.data.response.header.resultMsg}`);\r\n        }\r\n      } else {\r\n        setError('서버로부터 예상하지 못한 응답을 받았습니다.');\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error:\", err);\r\n      console.error(\"Error response data:\", err.response?.data);\r\n\r\n      if (err.response?.data?.includes('SERVICE KEY IS NOT REGISTERED ERROR')) {\r\n        setError('유효하지 않은 서비스 키입니다. 공공데이터 포털에서 올바른 키를 확인하세요.');\r\n      } else if (err.response?.data?.includes('Service Not Found')) {\r\n        setError('잘못된 API 요청입니다. URL과 파라미터를 확인하세요.');\r\n      } else {\r\n        setError('관광지 정보를 가져오는 데 실패했습니다.');\r\n      }\r\n\r\n      setTouristData([]);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetchTouristData();\r\n  };\r\n\r\n  return (\r\n    <div className=\"tourist-container\">\r\n      <h2>관광지 정보</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <button type=\"submit\">Get Tourist Info</button>\r\n      </form>\r\n\r\n      {error && <p className=\"error-message\" style={{ color: 'red' }}>{error}</p>}\r\n\r\n      {touristData.length > 0 && (\r\n        <div className=\"tourist-info\">\r\n          <ul>\r\n            {touristData.map((item, index) => (\r\n              <li key={index}>\r\n                <h3>{item.tAtsNm}</h3>\r\n                <p>기본 주소: {item.rlteBsicAdres}</p>\r\n                {/* <p>관광지 명: {item.rlteTatsNm}</p>\r\n                <p>지역명: {item.areaNm}</p>\r\n                <p>카테고리: {item.rlteCtgryLclsNm} - {item.rlteCtgryMclsNm}</p>\r\n                <p>연관 순위: {item.rlteRank}</p> */}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test2;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}