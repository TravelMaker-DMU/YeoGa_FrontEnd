{"ast":null,"code":"const fetchTouristData = async () => {\n  try {\n    const params = {\n      serviceKey: serviceKey,\n      numOfRows: 10,\n      pageNo: 1,\n      MobileOS: 'ETC',\n      MobileApp: 'TestApp',\n      _type: 'json',\n      baseYm: '202404',\n      areaCd: 51,\n      sigunguCd: '11530',\n      keyword: '뮤지엄산'\n    };\n    const response = await axios.get(url, {\n      params: params,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    // 응답이 예상한 구조인지 확인\n    if (response.data && response.data.response && response.data.response.header) {\n      if (response.data.response.header.resultCode === \"0000\") {\n        if (response.data.response.body && response.data.response.body.items) {\n          setTouristData(response.data.response.body.items.item);\n          setError(null);\n        } else {\n          setError('데이터를 찾을 수 없습니다.');\n        }\n      } else {\n        setError(`에러 코드 ${response.data.response.header.resultCode}: ${response.data.response.header.resultMsg}`);\n      }\n    } else {\n      // 예상한 응답 구조가 아닐 경우\n      console.error(\"Unexpected response structure:\", response.data);\n      setError('서버로부터 예상하지 못한 응답을 받았습니다.');\n    }\n  } catch (err) {\n    var _err$response;\n    console.error(err);\n    console.error(\"Error response data:\", (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data); // 에러 세부 데이터 출력\n    setError('관광지 정보를 가져오는 데 실패했습니다.');\n    setTouristData(null);\n  }\n};","map":{"version":3,"names":["fetchTouristData","params","serviceKey","numOfRows","pageNo","MobileOS","MobileApp","_type","baseYm","areaCd","sigunguCd","keyword","response","axios","get","url","headers","data","header","resultCode","body","items","setTouristData","item","setError","resultMsg","console","error","err","_err$response"],"sources":["C:/Users/user/YeoGa_FrontEnd/src/page/Test2.jsx"],"sourcesContent":["const fetchTouristData = async () => {\r\n    try {\r\n      const params = {\r\n        serviceKey: serviceKey,\r\n        numOfRows: 10,\r\n        pageNo: 1,\r\n        MobileOS: 'ETC',\r\n        MobileApp: 'TestApp',\r\n        _type: 'json',\r\n        baseYm: '202404',\r\n        areaCd: 51,\r\n        sigunguCd: '11530',\r\n        keyword: '뮤지엄산'\r\n      };\r\n\r\n      const response = await axios.get(url, {\r\n        params: params,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        }\r\n      });\r\n\r\n      // 응답이 예상한 구조인지 확인\r\n      if (response.data && response.data.response && response.data.response.header) {\r\n        if (response.data.response.header.resultCode === \"0000\") {\r\n          if (response.data.response.body && response.data.response.body.items) {\r\n            setTouristData(response.data.response.body.items.item);\r\n            setError(null);\r\n          } else {\r\n            setError('데이터를 찾을 수 없습니다.');\r\n          }\r\n        } else {\r\n          setError(`에러 코드 ${response.data.response.header.resultCode}: ${response.data.response.header.resultMsg}`);\r\n        }\r\n      } else {\r\n        // 예상한 응답 구조가 아닐 경우\r\n        console.error(\"Unexpected response structure:\", response.data);\r\n        setError('서버로부터 예상하지 못한 응답을 받았습니다.');\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      console.error(\"Error response data:\", err.response?.data);  // 에러 세부 데이터 출력\r\n      setError('관광지 정보를 가져오는 데 실패했습니다.');\r\n      setTouristData(null);\r\n    }\r\n  };\r\n"],"mappings":"AAAA,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACjC,IAAI;IACF,MAAMC,MAAM,GAAG;MACbC,UAAU,EAAEA,UAAU;MACtBC,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE,CAAC;MACTC,QAAQ,EAAE,KAAK;MACfC,SAAS,EAAE,SAAS;MACpBC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,QAAQ;MAChBC,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE,OAAO;MAClBC,OAAO,EAAE;IACX,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAACC,GAAG,EAAE;MACpCd,MAAM,EAAEA,MAAM;MACde,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;;IAEF;IACA,IAAIJ,QAAQ,CAACK,IAAI,IAAIL,QAAQ,CAACK,IAAI,CAACL,QAAQ,IAAIA,QAAQ,CAACK,IAAI,CAACL,QAAQ,CAACM,MAAM,EAAE;MAC5E,IAAIN,QAAQ,CAACK,IAAI,CAACL,QAAQ,CAACM,MAAM,CAACC,UAAU,KAAK,MAAM,EAAE;QACvD,IAAIP,QAAQ,CAACK,IAAI,CAACL,QAAQ,CAACQ,IAAI,IAAIR,QAAQ,CAACK,IAAI,CAACL,QAAQ,CAACQ,IAAI,CAACC,KAAK,EAAE;UACpEC,cAAc,CAACV,QAAQ,CAACK,IAAI,CAACL,QAAQ,CAACQ,IAAI,CAACC,KAAK,CAACE,IAAI,CAAC;UACtDC,QAAQ,CAAC,IAAI,CAAC;QAChB,CAAC,MAAM;UACLA,QAAQ,CAAC,iBAAiB,CAAC;QAC7B;MACF,CAAC,MAAM;QACLA,QAAQ,CAAC,SAASZ,QAAQ,CAACK,IAAI,CAACL,QAAQ,CAACM,MAAM,CAACC,UAAU,KAAKP,QAAQ,CAACK,IAAI,CAACL,QAAQ,CAACM,MAAM,CAACO,SAAS,EAAE,CAAC;MAC3G;IACF,CAAC,MAAM;MACL;MACAC,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEf,QAAQ,CAACK,IAAI,CAAC;MAC9DO,QAAQ,CAAC,0BAA0B,CAAC;IACtC;EACF,CAAC,CAAC,OAAOI,GAAG,EAAE;IAAA,IAAAC,aAAA;IACZH,OAAO,CAACC,KAAK,CAACC,GAAG,CAAC;IAClBF,OAAO,CAACC,KAAK,CAAC,sBAAsB,GAAAE,aAAA,GAAED,GAAG,CAAChB,QAAQ,cAAAiB,aAAA,uBAAZA,aAAA,CAAcZ,IAAI,CAAC,CAAC,CAAE;IAC5DO,QAAQ,CAAC,wBAAwB,CAAC;IAClCF,cAAc,CAAC,IAAI,CAAC;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}