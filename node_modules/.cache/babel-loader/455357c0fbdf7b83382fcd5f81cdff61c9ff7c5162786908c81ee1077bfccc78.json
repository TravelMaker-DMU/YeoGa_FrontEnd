{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import'./Weather.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WeatherApp=()=>{const[city,setCity]=useState('Seoul');// 기본 값을 'Seoul'로 설정\nconst[weatherData,setWeatherData]=useState(null);const[error,setError]=useState(null);const apiKey=process.env.REACT_APP_API_KEY;const fetchWeather=async()=>{try{const url=\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city,\"&appid=\").concat(apiKey,\"&units=metric\");// 기상청 일반 API키  :  7qIlmVuNGV7pzIFYHRANmtd94tO1QGcC7a3hJRjj7lEshFvVHSRyw9AR9IhSHMoHYz2VV7uif6Wf5u517bNjlg%3D%3D\n// const url = `https://pro.openweathermap.org/data/2.5/forecast/hourly?q=${city}&appid=${apiKey}`;\nconsole.log(\"Fetching weather data from: \".concat(url));const response=await axios.get(url);setWeatherData(response.data);setError(null);// 오류 초기화\n}catch(err){console.error(err);// 에러 콘솔 출력\nsetError('날씨 정보를 가져오는 데 실패했습니다. 도시 이름을 확인해 주세요.');setWeatherData(null);}};const handleSubmit=e=>{e.preventDefault();if(city){fetchWeather();}else{setError('도시 이름을 입력해 주세요.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"weather-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Weather App\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter city name\",value:city,onChange:e=>setCity(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Get Weather\"})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),weatherData&&/*#__PURE__*/_jsxs(\"div\",{className:\"weather-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Temperature: \",weatherData.main.temp,\"\\xB0C\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Weather: \",weatherData.weather[0].description]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Humidity: \",weatherData.main.humidity,\"%\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Wind Speed: \",weatherData.wind.speed,\" m/s\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" \",weatherData.id]}),/*#__PURE__*/_jsx(\"p\",{children:weatherData.weather[0].icon})]})]});};export default WeatherApp;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","WeatherApp","city","setCity","weatherData","setWeatherData","error","setError","apiKey","process","env","REACT_APP_API_KEY","fetchWeather","url","concat","console","log","response","get","data","err","handleSubmit","e","preventDefault","className","children","onSubmit","type","placeholder","value","onChange","target","main","temp","weather","description","humidity","wind","speed","id","icon"],"sources":["C:/Users/user/YeoGa_FrontEnd/src/page/WeatherPage/WeatherApp.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Weather.css';\r\n\r\nconst WeatherApp = () => {\r\n  const [city, setCity] = useState('Seoul'); // 기본 값을 'Seoul'로 설정\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const apiKey = process.env.REACT_APP_API_KEY; \r\n\r\n  const fetchWeather = async () => {\r\n    try {\r\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\r\n\r\n      \r\n      // 기상청 일반 API키  :  7qIlmVuNGV7pzIFYHRANmtd94tO1QGcC7a3hJRjj7lEshFvVHSRyw9AR9IhSHMoHYz2VV7uif6Wf5u517bNjlg%3D%3D\r\n\r\n\r\n      // const url = `https://pro.openweathermap.org/data/2.5/forecast/hourly?q=${city}&appid=${apiKey}`;\r\n      console.log(`Fetching weather data from: ${url}`); \r\n      \r\n\r\n      const response = await axios.get(url);\r\n      setWeatherData(response.data);\r\n      setError(null); // 오류 초기화\r\n    } catch (err) {\r\n      console.error(err);  // 에러 콘솔 출력\r\n      setError('날씨 정보를 가져오는 데 실패했습니다. 도시 이름을 확인해 주세요.');\r\n      setWeatherData(null);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (city) {\r\n      fetchWeather();\r\n    } else {\r\n      setError('도시 이름을 입력해 주세요.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"weather-container\">\r\n      <h2>Weather App</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter city name\"\r\n          value={city}\r\n          onChange={(e) => setCity(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Get Weather</button>\r\n      </form>\r\n\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      {weatherData && (\r\n        <div className=\"weather-info\">\r\n          \r\n          <p>Temperature: {weatherData.main.temp}°C</p>\r\n          <p>Weather: {weatherData.weather[0].description}</p>\r\n          <p>Humidity: {weatherData.main.humidity}%</p>\r\n          <p>Wind Speed: {weatherData.wind.speed} m/s</p>\r\n          <p> {weatherData.id}</p>\r\n          <p>{weatherData.weather[0].icon}</p>\r\n          {/* <p>{weatherData.main.temp_max}</p> */}\r\n\r\n          {/* <p> {weatherData.main.temp}</p> */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n  \r\nexport default WeatherApp;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvB,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGR,QAAQ,CAAC,OAAO,CAAC,CAAE;AAC3C,KAAM,CAACS,WAAW,CAAEC,cAAc,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAAAa,MAAM,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAE5C,KAAM,CAAAC,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACF,KAAM,CAAAC,GAAG,sDAAAC,MAAA,CAAwDZ,IAAI,YAAAY,MAAA,CAAUN,MAAM,iBAAe,CAGpG;AAGA;AACAO,OAAO,CAACC,GAAG,gCAAAF,MAAA,CAAgCD,GAAG,CAAE,CAAC,CAGjD,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAArB,KAAK,CAACsB,GAAG,CAACL,GAAG,CAAC,CACrCR,cAAc,CAACY,QAAQ,CAACE,IAAI,CAAC,CAC7BZ,QAAQ,CAAC,IAAI,CAAC,CAAE;AAClB,CAAE,MAAOa,GAAG,CAAE,CACZL,OAAO,CAACT,KAAK,CAACc,GAAG,CAAC,CAAG;AACrBb,QAAQ,CAAC,uCAAuC,CAAC,CACjDF,cAAc,CAAC,IAAI,CAAC,CACtB,CACF,CAAC,CAED,KAAM,CAAAgB,YAAY,CAAIC,CAAC,EAAK,CAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAIrB,IAAI,CAAE,CACRU,YAAY,CAAC,CAAC,CAChB,CAAC,IAAM,CACLL,QAAQ,CAAC,iBAAiB,CAAC,CAC7B,CACF,CAAC,CAED,mBACEP,KAAA,QAAKwB,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChC3B,IAAA,OAAA2B,QAAA,CAAI,aAAW,CAAI,CAAC,cACpBzB,KAAA,SAAM0B,QAAQ,CAAEL,YAAa,CAAAI,QAAA,eAC3B3B,IAAA,UACE6B,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,iBAAiB,CAC7BC,KAAK,CAAE3B,IAAK,CACZ4B,QAAQ,CAAGR,CAAC,EAAKnB,OAAO,CAACmB,CAAC,CAACS,MAAM,CAACF,KAAK,CAAE,CAC1C,CAAC,cACF/B,IAAA,WAAQ6B,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,aAAW,CAAQ,CAAC,EACtC,CAAC,CAENnB,KAAK,eAAIR,IAAA,MAAG0B,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAEnB,KAAK,CAAI,CAAC,CAEjDF,WAAW,eACVJ,KAAA,QAAKwB,SAAS,CAAC,cAAc,CAAAC,QAAA,eAE3BzB,KAAA,MAAAyB,QAAA,EAAG,eAAa,CAACrB,WAAW,CAAC4B,IAAI,CAACC,IAAI,CAAC,OAAE,EAAG,CAAC,cAC7CjC,KAAA,MAAAyB,QAAA,EAAG,WAAS,CAACrB,WAAW,CAAC8B,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW,EAAI,CAAC,cACpDnC,KAAA,MAAAyB,QAAA,EAAG,YAAU,CAACrB,WAAW,CAAC4B,IAAI,CAACI,QAAQ,CAAC,GAAC,EAAG,CAAC,cAC7CpC,KAAA,MAAAyB,QAAA,EAAG,cAAY,CAACrB,WAAW,CAACiC,IAAI,CAACC,KAAK,CAAC,MAAI,EAAG,CAAC,cAC/CtC,KAAA,MAAAyB,QAAA,EAAG,GAAC,CAACrB,WAAW,CAACmC,EAAE,EAAI,CAAC,cACxBzC,IAAA,MAAA2B,QAAA,CAAIrB,WAAW,CAAC8B,OAAO,CAAC,CAAC,CAAC,CAACM,IAAI,CAAI,CAAC,EAIjC,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAvC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}