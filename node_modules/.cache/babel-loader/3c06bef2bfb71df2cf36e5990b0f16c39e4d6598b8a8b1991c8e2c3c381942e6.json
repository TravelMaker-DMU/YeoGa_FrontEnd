{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\YeoGa_FrontEnd\\\\src\\\\page\\\\MapPage\\\\Tripsub\\\\Tripsub.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Map, Polyline, MapMarker } from 'react-kakao-maps-sdk';\nimport '../Tripsub/Tripsub.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KAKAO_API_KEY = '892b3fa8ad217de4b2ca0cae7c1ca67b';\nconst DIRECTIONS_URL = 'https://apis-navi.kakaomobility.com/v1/waypoints/directions';\nconst fetchDirections = async (origin, destination, waypoints) => {\n  try {\n    const response = await axios.post(DIRECTIONS_URL, {\n      origin: {\n        x: parseFloat(origin.lng),\n        y: parseFloat(origin.lat)\n      },\n      destination: {\n        x: parseFloat(destination.lng),\n        y: parseFloat(destination.lat)\n      },\n      waypoints: waypoints.map((point, index) => ({\n        name: `waypoint${index}`,\n        x: parseFloat(point.lng),\n        y: parseFloat(point.lat)\n      })),\n      priority: 'RECOMMEND',\n      car_fuel: 'GASOLINE',\n      car_hipass: false,\n      alternatives: false,\n      road_details: false\n    }, {\n      headers: {\n        Authorization: `KakaoAK ${KAKAO_API_KEY}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log('API response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching directions:', error.response ? error.response.data : error.message);\n    return null;\n  }\n};\nconst extractPathFromVertexes = vertexes => {\n  const path = [];\n  for (let i = 0; i < vertexes.length; i += 2) {\n    if (vertexes[i + 1] !== undefined) {\n      path.push({\n        lat: vertexes[i + 1],\n        lng: vertexes[i]\n      });\n    }\n  }\n  return path;\n};\nconst generateRandomCoordinates = () => {\n  const lat = 37.5 + Math.random() * 0.2;\n  const lng = 126.8 + Math.random() * 0.2;\n  return {\n    lat,\n    lng\n  };\n};\nconst Tripsub = () => {\n  _s();\n  const [origin, setOrigin] = useState(generateRandomCoordinates());\n  const [destination, setDestination] = useState(generateRandomCoordinates());\n  const [waypoints, setWaypoints] = useState([generateRandomCoordinates(), generateRandomCoordinates()]);\n  const [route, setRoute] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getRoute = async () => {\n      if (origin && destination) {\n        const directions = await fetchDirections(origin, destination, waypoints);\n        if (directions && directions.routes && directions.routes[0]) {\n          setRoute(directions.routes[0]);\n        } else {\n          setError('경로를 가져오는데 실패했습니다.');\n        }\n      } else {\n        setError(\"출발지와 도착지를 설정하세요.\");\n      }\n    };\n    getRoute();\n  }, [origin, destination, waypoints]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Tripsub-map\",\n    children: [/*#__PURE__*/_jsxDEV(Map, {\n      center: {\n        lat: origin.lat,\n        lng: origin.lng\n      },\n      style: {\n        width: '75vw',\n        height: '100vh'\n      },\n      level: 2,\n      children: [/*#__PURE__*/_jsxDEV(MapMarker, {\n        position: {\n          lat: origin.lat,\n          lng: origin.lng\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapMarker, {\n        position: {\n          lat: destination.lat,\n          lng: destination.lng\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), waypoints.map((point, index) => /*#__PURE__*/_jsxDEV(MapMarker, {\n        position: {\n          lat: point.lat,\n          lng: point.lng\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)), waypoints.map((point, index) => /*#__PURE__*/_jsxDEV(MapMarker, {\n        position: {\n          lat: point.lat,\n          lng: point.lng\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)), route && route.sections && /*#__PURE__*/_jsxDEV(Polyline, {\n        path: route.sections.flatMap(section => section.roads ? section.roads.flatMap(road => extractPathFromVertexes(road.vertexes)) : []),\n        strokeWeight: 2,\n        strokeColor: \"black\",\n        strokeOpacity: 0.7,\n        strokeStyle: \"solid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tripsub-location-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC5EC\\uD589\\uACBD\\uB85C \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), waypoints.map((point, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tripsub-location-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: `경유지 ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC5EC\\uD589\\uD558\\uB294 \\uC7A5\\uC18C\\uC758 \\uAC04\\uB7B5\\uD55C \\uC124\\uBA85\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(Tripsub, \"ZQeOZyeU+7F+N5ETmf6TK8YFjTc=\");\n_c = Tripsub;\nexport default Tripsub;\nvar _c;\n$RefreshReg$(_c, \"Tripsub\");","map":{"version":3,"names":["React","useState","useEffect","axios","Map","Polyline","MapMarker","jsxDEV","_jsxDEV","KAKAO_API_KEY","DIRECTIONS_URL","fetchDirections","origin","destination","waypoints","response","post","x","parseFloat","lng","y","lat","map","point","index","name","priority","car_fuel","car_hipass","alternatives","road_details","headers","Authorization","console","log","data","error","message","extractPathFromVertexes","vertexes","path","i","length","undefined","push","generateRandomCoordinates","Math","random","Tripsub","_s","setOrigin","setDestination","setWaypoints","route","setRoute","setError","getRoute","directions","routes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","style","width","height","level","position","sections","flatMap","section","roads","road","strokeWeight","strokeColor","strokeOpacity","strokeStyle","_c","$RefreshReg$"],"sources":["C:/Users/user/YeoGa_FrontEnd/src/page/MapPage/Tripsub/Tripsub.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Map, Polyline, MapMarker } from 'react-kakao-maps-sdk';\r\nimport '../Tripsub/Tripsub.css';\r\n\r\nconst KAKAO_API_KEY = '892b3fa8ad217de4b2ca0cae7c1ca67b';\r\nconst DIRECTIONS_URL = 'https://apis-navi.kakaomobility.com/v1/waypoints/directions';\r\n\r\nconst fetchDirections = async (origin, destination, waypoints) => {\r\n  try {\r\n    const response = await axios.post(\r\n      DIRECTIONS_URL,\r\n      {\r\n        origin: { x: parseFloat(origin.lng), y: parseFloat(origin.lat) },\r\n        destination: { x: parseFloat(destination.lng), y: parseFloat(destination.lat) },\r\n        waypoints: waypoints.map((point, index) => ({\r\n          name: `waypoint${index}`,\r\n          x: parseFloat(point.lng),\r\n          y: parseFloat(point.lat),\r\n        })),\r\n        priority: 'RECOMMEND',\r\n        car_fuel: 'GASOLINE',\r\n        car_hipass: false,\r\n        alternatives: false,\r\n        road_details: false,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `KakaoAK ${KAKAO_API_KEY}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    );\r\n    console.log('API response:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching directions:', error.response ? error.response.data : error.message);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst extractPathFromVertexes = (vertexes) => {\r\n  const path = [];\r\n  for (let i = 0; i < vertexes.length; i += 2) {\r\n    if (vertexes[i + 1] !== undefined) {\r\n      path.push({ lat: vertexes[i + 1], lng: vertexes[i] });\r\n    }\r\n  }\r\n  return path;\r\n};\r\n\r\nconst generateRandomCoordinates = () => {\r\n  const lat = 37.5 + Math.random() * 0.2;\r\n  const lng = 126.8 + Math.random() * 0.2;\r\n  return { lat, lng };\r\n};\r\n\r\nconst Tripsub = () => {\r\n  const [origin, setOrigin] = useState(generateRandomCoordinates());\r\n  const [destination, setDestination] = useState(generateRandomCoordinates());\r\n  const [waypoints, setWaypoints] = useState([\r\n    generateRandomCoordinates(),\r\n    generateRandomCoordinates(),\r\n  ]);\r\n  const [route, setRoute] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getRoute = async () => {\r\n      if (origin && destination) {\r\n        const directions = await fetchDirections(origin, destination, waypoints);\r\n        if (directions && directions.routes && directions.routes[0]) {\r\n          setRoute(directions.routes[0]);\r\n        } else {\r\n          setError('경로를 가져오는데 실패했습니다.');\r\n        }\r\n      } else {\r\n        setError(\"출발지와 도착지를 설정하세요.\");\r\n      }\r\n    };\r\n    getRoute();\r\n  }, [origin, destination, waypoints]);\r\n\r\n  if (error) {\r\n    return <div className='error-message'>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"Tripsub-map\">\r\n      <Map\r\n        center={{ lat: origin.lat, lng: origin.lng }}\r\n        style={{ width: '75vw', height: '100vh' }}\r\n        level={2}\r\n      >\r\n        <MapMarker position={{ lat: origin.lat, lng: origin.lng }} />\r\n\r\n        <MapMarker position={{ lat: destination.lat, lng: destination.lng }} />\r\n        \r\n        {waypoints.map((point, index) => (\r\n          <MapMarker key={index} position={{ lat: point.lat, lng: point.lng }} />\r\n          \r\n        ))}\r\n         {waypoints.map((point, index) => (\r\n          <MapMarker key={index} position={{ lat: point.lat, lng: point.lng }} />\r\n          \r\n        ))}\r\n        {route && route.sections && (\r\n          <Polyline\r\n            path={route.sections.flatMap(section =>\r\n              section.roads ? section.roads.flatMap(road => extractPathFromVertexes(road.vertexes)) : []\r\n            )}\r\n            strokeWeight={2}\r\n            strokeColor=\"black\"\r\n            strokeOpacity={0.7}\r\n            strokeStyle=\"solid\"\r\n          />\r\n        )}\r\n      </Map>\r\n\r\n      <div className=\"tripsub-location-info\">\r\n        <h3>여행경로 정보</h3>\r\n\r\n        {waypoints.map((point, index) => (\r\n          <div key={index} className=\"tripsub-location-item\">\r\n            <h4>{`경유지 ${index + 1}`}</h4>\r\n            <p>여행하는 장소의 간략한 설명</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tripsub;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}