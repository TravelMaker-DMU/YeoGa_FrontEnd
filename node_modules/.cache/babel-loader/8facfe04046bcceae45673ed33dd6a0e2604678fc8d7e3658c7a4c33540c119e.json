{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\YeoGa_FrontEnd\\\\src\\\\page\\\\MapPage\\\\Tripsub\\\\Tripsub.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tripsub = ({\n  origin = {\n    lat: 37.5665,\n    lng: 126.9780\n  },\n  // 서울시청 좌표를 기본값으로 설정\n  destination = {\n    lat: 37.4602,\n    lng: 126.4407\n  },\n  // 인천공항 좌표를 기본값으로 설정\n  waypoints = []\n}) => {\n  _s();\n  const [route, setRoute] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getRoute = async () => {\n      if (!origin || !destination) {\n        setError(\"출발지와 도착지를 설정하세요.\");\n        return;\n      }\n      const directions = await fetchDirections(origin, destination, waypoints);\n      console.log('Directions response:', directions); // 데이터 구조 확인\n\n      if (directions && directions.routes && directions.routes[0]) {\n        setRoute(directions.routes[0]); // 첫 번째 경로를 설정\n      } else {\n        setError('경로를 가져오는데 실패했습니다.');\n      }\n    };\n    getRoute();\n  }, [origin, destination, waypoints]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kakaomap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"\\uACBD\\uB85C \\uC548\\uB0B4 \\uC9C0\\uB3C4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          center: {\n            lat: origin.lat,\n            lng: origin.lng\n          },\n          style: {\n            width: '100%',\n            height: '500px'\n          } // 높이 및 너비 조정\n          ,\n          level: 3,\n          children: [/*#__PURE__*/_jsxDEV(MapMarker, {\n            position: {\n              lat: origin.lat,\n              lng: origin.lng\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MapMarker, {\n            position: {\n              lat: destination.lat,\n              lng: destination.lng\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), waypoints.length > 0 && waypoints.map((point, index) => /*#__PURE__*/_jsxDEV(MapMarker, {\n            position: {\n              lat: point.lat,\n              lng: point.lng\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)), route && route.sections && /*#__PURE__*/_jsxDEV(Polyline, {\n            path: route.sections.flatMap(section => section.roads ? section.roads.flatMap(road => extractPathFromVertexes(road.vertexes)) : []),\n            strokeWeight: 5,\n            strokeColor: \"#FF0000\",\n            strokeOpacity: 0.7,\n            strokeStyle: \"solid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uACBD\\uB85C \\uC815\\uBCF4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), waypoints.map((point, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: `경유지 ${index + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC5EC\\uD589\\uD558\\uB294 \\uC7A5\\uC18C\\uC758 \\uAC04\\uB7B5\\uD55C \\uC124\\uBA85\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Tripsub, \"d8E7ee0OAcbtRgNfS1sgv1qfTfo=\");\n_c = Tripsub;\nvar _c;\n$RefreshReg$(_c, \"Tripsub\");","map":{"version":3,"names":["Tripsub","origin","lat","lng","destination","waypoints","_s","route","setRoute","useState","error","setError","useEffect","getRoute","directions","fetchDirections","console","log","routes","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Map","center","style","width","height","level","MapMarker","position","length","map","point","index","sections","Polyline","path","flatMap","section","roads","road","extractPathFromVertexes","vertexes","strokeWeight","strokeColor","strokeOpacity","strokeStyle","_c","$RefreshReg$"],"sources":["C:/Users/user/YeoGa_FrontEnd/src/page/MapPage/Tripsub/Tripsub.jsx"],"sourcesContent":["const Tripsub = ({\r\n  origin = { lat: 37.5665, lng: 126.9780 }, // 서울시청 좌표를 기본값으로 설정\r\n  destination = { lat: 37.4602, lng: 126.4407 }, // 인천공항 좌표를 기본값으로 설정\r\n  waypoints = []\r\n}) => {\r\n  const [route, setRoute] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getRoute = async () => {\r\n      if (!origin || !destination) {\r\n        setError(\"출발지와 도착지를 설정하세요.\");\r\n        return;\r\n      }\r\n    \r\n      const directions = await fetchDirections(origin, destination, waypoints);\r\n      console.log('Directions response:', directions); // 데이터 구조 확인\r\n    \r\n      if (directions && directions.routes && directions.routes[0]) {\r\n        setRoute(directions.routes[0]); // 첫 번째 경로를 설정\r\n      } else {\r\n        setError('경로를 가져오는데 실패했습니다.');\r\n      }\r\n    };\r\n\r\n    getRoute();\r\n  }, [origin, destination, waypoints]);\r\n\r\n  if (error) {\r\n    return <div className='error-message'>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"kakaomap\">\r\n      <div className=\"container\">\r\n        <div className=\"title\">경로 안내 지도</div>\r\n        <div className=\"map-container\">\r\n          <Map\r\n            center={{ lat: origin.lat, lng: origin.lng }}\r\n            style={{ width: '100%', height: '500px' }} // 높이 및 너비 조정\r\n            level={3}\r\n          >\r\n            {/* 출발지 마커 */}\r\n            <MapMarker position={{ lat: origin.lat, lng: origin.lng }} />\r\n            {/* 도착지 마커 */}\r\n            <MapMarker position={{ lat: destination.lat, lng: destination.lng }} />\r\n            {/* 경유지 마커 */}\r\n            {waypoints.length > 0 &&\r\n              waypoints.map((point, index) => (\r\n                <MapMarker key={index} position={{ lat: point.lat, lng: point.lng }} />\r\n              ))}\r\n            {/* 경로 폴리라인 */}\r\n            {route && route.sections && (\r\n              <Polyline\r\n                path={route.sections.flatMap(section =>\r\n                  section.roads ? section.roads.flatMap(road => extractPathFromVertexes(road.vertexes)) : []\r\n                )}\r\n                strokeWeight={5}\r\n                strokeColor=\"#FF0000\"\r\n                strokeOpacity={0.7}\r\n                strokeStyle=\"solid\"\r\n              />\r\n            )}\r\n          </Map>\r\n        </div>\r\n\r\n        <div className=\"location-info\">\r\n          <h3>경로 정보</h3>\r\n          {waypoints.map((point, index) => (\r\n            <div key={index} className=\"location-item\">\r\n              <h4>{`경유지 ${index + 1}`}</h4>\r\n              <p>여행하는 장소의 간략한 설명</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}