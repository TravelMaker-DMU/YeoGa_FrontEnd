{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{Map,Polyline,CustomOverlayMap}from'react-kakao-maps-sdk';import'../Tripsub/Tripsub.css';import{useLocation}from'react-router-dom';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const KAKAO_API_KEY='892b3fa8ad217de4b2ca0cae7c1ca67b';const fetchDirections=async(origin,destination,waypoints)=>{try{const response=await axios.post('https://apis-navi.kakaomobility.com/v1/waypoints/directions',{origin:{x:origin.lng,y:origin.lat},destination:{x:destination.lng,y:destination.lat},waypoints:waypoints.map((point,index)=>({name:\"waypoint\".concat(index),x:point.lng,y:point.lat})),priority:'RECOMMEND',car_fuel:'GASOLINE',car_hipass:false,alternatives:false,road_details:false},{headers:{Authorization:\"KakaoAK \".concat(KAKAO_API_KEY),'Content-Type':'application/json'}});return response.data;}catch(error){console.error('Error fetching directions:',error);return null;}};const Tripsub=()=>{const location=useLocation();const navigate=useNavigate();const homeButton=()=>{navigate('/');};const{origin,destination,waypoints,tripInfo}=location.state;const[route,setRoute]=useState(null);const[error,setError]=useState(null);useEffect(()=>{if(origin&&destination){fetchDirections(origin,destination,waypoints).then(directions=>{if(directions&&directions.routes){setRoute(directions.routes[0]);}else{setError('경로를 가져오는 데 실패했습니다.');}}).catch(()=>setError('API 요청 중 오류가 발생했습니다.'));}else{setError('출발지와 목적지를 설정하세요.');}},[origin,destination,waypoints]);if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error});}return/*#__PURE__*/_jsxs(\"div\",{className:\"Tripsub-container\",style:{display:'flex'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"Tripsub-map\",style:{width:'70%',height:'100vh'},children:/*#__PURE__*/_jsxs(Map,{center:origin||{lat:37.5665,lng:126.9780},style:{width:'100%',height:'100%'},level:3,children:[origin&&/*#__PURE__*/_jsx(CustomOverlayMap,{position:{lat:origin.lat,lng:origin.lng},yAnchor:1,children:/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:'blue',color:'white',borderRadius:'50%',width:'30px',height:'30px',display:'flex',alignItems:'center',justifyContent:'center',fontWeight:'bold'},children:\"1\"})}),waypoints&&waypoints.map((point,index)=>/*#__PURE__*/_jsx(CustomOverlayMap,{position:{lat:point.lat,lng:point.lng},yAnchor:1,children:/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:'blue',color:'white',borderRadius:'50%',width:'30px',height:'30px',display:'flex',alignItems:'center',justifyContent:'center',fontWeight:'bold'},children:index+2})},index)),destination&&/*#__PURE__*/_jsx(CustomOverlayMap,{position:{lat:destination.lat,lng:destination.lng},yAnchor:1,children:/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:'blue',color:'white',borderRadius:'50%',width:'30px',height:'30px',display:'flex',alignItems:'center',justifyContent:'center',fontWeight:'bold'},children:\"3\"})}),route&&route.sections&&/*#__PURE__*/_jsx(Polyline,{path:route.sections.flatMap(section=>section.roads.flatMap(road=>road.vertexes.reduce((acc,vertex,idx)=>{if(idx%2===0){acc.push({lng:vertex,lat:road.vertexes[idx+1]});}return acc;},[]))),strokeWeight:5,strokeColor:\"black\",strokeOpacity:0.7,strokeStyle:\"solid\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"Tripsub-info\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uC5EC\\uD589\\uC9C0 \\uC815\\uBCF4\"}),tripInfo&&/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',marginBottom:'15px',border:'1px solid #ddd',padding:'10px',borderRadius:'8px'},children:[/*#__PURE__*/_jsx(\"img\",{src:tripInfo.image,alt:tripInfo.name,style:{width:'170px',height:'150px',borderRadius:'8px'}}),/*#__PURE__*/_jsxs(\"div\",{className:\"Tripsub-info-list\",children:[/*#__PURE__*/_jsx(\"p\",{style:{fontWeight:'bold'},children:tripInfo.name}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC8FC\\uC18C: \",tripInfo.address]}),/*#__PURE__*/_jsx(\"p\",{children:tripInfo.time})]})]}),tripInfo.additionalLocations&&tripInfo.additionalLocations.map((location,index)=>/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',marginBottom:'15px',border:'1px solid #ddd',padding:'10px',borderRadius:'8px'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"Location-img\",children:/*#__PURE__*/_jsx(\"img\",{src:location.image,alt:location.name,style:{objectFit:'cover',width:'170px',height:'150px',borderRadius:'8px'}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"Tripsub-info-list\",children:[/*#__PURE__*/_jsx(\"p\",{style:{fontWeight:'bold'},children:location.name}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC8FC\\uC18C: \",location.address]}),/*#__PURE__*/_jsx(\"p\",{children:location.time})]})]},index)),/*#__PURE__*/_jsx(\"button\",{className:\"Tripsub-button\",style:{width:'100%',padding:'10px',backgroundColor:'#007bff',color:'#fff',border:'none',borderRadius:'8px',cursor:'pointer'},onClick:homeButton,children:\"\\uB098\\uAC00\\uAE30\"})]})]});};export default Tripsub;","map":{"version":3,"names":["React","useState","useEffect","axios","Map","Polyline","CustomOverlayMap","useLocation","useNavigate","jsx","_jsx","jsxs","_jsxs","KAKAO_API_KEY","fetchDirections","origin","destination","waypoints","response","post","x","lng","y","lat","map","point","index","name","concat","priority","car_fuel","car_hipass","alternatives","road_details","headers","Authorization","data","error","console","Tripsub","location","navigate","homeButton","tripInfo","state","route","setRoute","setError","then","directions","routes","catch","className","children","style","display","width","height","center","level","position","yAnchor","backgroundColor","color","borderRadius","alignItems","justifyContent","fontWeight","sections","path","flatMap","section","roads","road","vertexes","reduce","acc","vertex","idx","push","strokeWeight","strokeColor","strokeOpacity","strokeStyle","marginBottom","border","padding","src","image","alt","address","time","additionalLocations","objectFit","cursor","onClick"],"sources":["C:/Users/user/YeoGa_FrontEnd/src/page/MapPage/Tripsub/Tripsub.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Map, Polyline, CustomOverlayMap } from 'react-kakao-maps-sdk';\r\nimport '../Tripsub/Tripsub.css';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst KAKAO_API_KEY = '892b3fa8ad217de4b2ca0cae7c1ca67b';\r\n\r\n\r\nconst fetchDirections = async (origin, destination, waypoints) => {\r\n    try {\r\n        const response = await axios.post(\r\n            'https://apis-navi.kakaomobility.com/v1/waypoints/directions',\r\n            {\r\n                origin: { x: origin.lng, y: origin.lat },\r\n                destination: { x: destination.lng, y: destination.lat },\r\n                waypoints: waypoints.map((point, index) => ({\r\n                    name: `waypoint${index}`,\r\n                    x: point.lng,\r\n                    y: point.lat,\r\n                })),\r\n                priority: 'RECOMMEND',\r\n                car_fuel: 'GASOLINE',\r\n                car_hipass: false,\r\n                alternatives: false,\r\n                road_details: false,\r\n            },\r\n            {\r\n                headers: {\r\n                    Authorization: `KakaoAK ${KAKAO_API_KEY}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n        );\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching directions:', error);\r\n        return null;\r\n    }\r\n};\r\n\r\nconst Tripsub = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n    const homeButton = () => {\r\n        navigate('/');\r\n    }\r\n    const { origin, destination, waypoints, tripInfo } = location.state;\r\n    \r\n\r\n    const [route, setRoute] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (origin && destination) {\r\n            fetchDirections(origin, destination, waypoints)\r\n                .then((directions) => {\r\n                    if (directions && directions.routes) {\r\n                        setRoute(directions.routes[0]);\r\n                    } else {\r\n                        setError('경로를 가져오는 데 실패했습니다.');\r\n                    }\r\n                })\r\n                .catch(() => setError('API 요청 중 오류가 발생했습니다.'));\r\n        } else {\r\n            setError('출발지와 목적지를 설정하세요.');\r\n        }\r\n    }, [origin, destination, waypoints]);\r\n\r\n    if (error) {\r\n        return <div className=\"error-message\">{error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"Tripsub-container\" style={{ display: 'flex' }}>\r\n            <div className=\"Tripsub-map\" style={{ width: '70%', height: '100vh' }}>\r\n                <Map\r\n                    center={origin || { lat: 37.5665, lng: 126.9780 }}\r\n                    style={{ width: '100%', height: '100%' }}\r\n                    level={3}\r\n                >\r\n                    {/* 출발지 마커 */}\r\n                    {origin && (\r\n                        <CustomOverlayMap position={{ lat: origin.lat, lng: origin.lng }} yAnchor={1}>\r\n                            <div\r\n                                style={{\r\n                                    backgroundColor: 'blue',\r\n                                    color: 'white',\r\n                                    borderRadius: '50%',\r\n                                    width: '30px',\r\n                                    height: '30px',\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                    fontWeight: 'bold',\r\n                                }}\r\n                            >\r\n                                1\r\n                            </div>\r\n                        </CustomOverlayMap>\r\n                    )}\r\n\r\n                    {/* 경유지 마커 */}\r\n                    {waypoints && waypoints.map((point, index) => (\r\n                        <CustomOverlayMap\r\n                            key={index}\r\n                            position={{ lat: point.lat, lng: point.lng }}\r\n                            yAnchor={1}\r\n                        >\r\n                            <div\r\n                                style={{\r\n                                    backgroundColor: 'blue',\r\n                                    color: 'white',\r\n                                    borderRadius: '50%',\r\n                                    width: '30px',\r\n                                    height: '30px',\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                    fontWeight: 'bold',\r\n                                }}\r\n                            >\r\n                                 {index + 2}\r\n                            </div>\r\n                        </CustomOverlayMap>\r\n                    ))}\r\n\r\n                    {/* 목적지 마커 */}\r\n                    {destination && (\r\n                        <CustomOverlayMap position={{ lat: destination.lat, lng: destination.lng }} yAnchor={1}>\r\n                            <div\r\n                                style={{\r\n                                    backgroundColor: 'blue',\r\n                                    color: 'white',\r\n                                    borderRadius: '50%',\r\n                                    width: '30px',\r\n                                    height: '30px',\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                    fontWeight: 'bold',\r\n                                }}\r\n                            >\r\n                                3\r\n                            </div>\r\n                        </CustomOverlayMap>\r\n                    )}\r\n\r\n                    {/* 경로 폴리라인 */}\r\n                    {route && route.sections && (\r\n                        <Polyline\r\n                            path={route.sections.flatMap((section) =>\r\n                                section.roads.flatMap((road) =>\r\n                                    road.vertexes.reduce((acc, vertex, idx) => {\r\n                                        if (idx % 2 === 0) {\r\n                                            acc.push({ lng: vertex, lat: road.vertexes[idx + 1] });\r\n                                        }\r\n                                        return acc;\r\n                                    }, [])\r\n                                )\r\n                            )}\r\n                            strokeWeight={5}\r\n                            strokeColor=\"black\"\r\n                            strokeOpacity={0.7}\r\n                            strokeStyle=\"solid\"\r\n                        />\r\n                    )}\r\n                </Map>\r\n            </div>\r\n\r\n            <div className=\"Tripsub-info\">\r\n                <h2>여행지 정보</h2>\r\n                {tripInfo && (\r\n                    <div style={{ display: 'flex', marginBottom: '15px', border: '1px solid #ddd', padding: '10px', borderRadius: '8px' }}>\r\n                        <img src={tripInfo.image} alt={tripInfo.name} style={{ width: '170px', height: '150px', borderRadius: '8px' }} />\r\n                        <div className='Tripsub-info-list'>\r\n                            <p style={{ fontWeight: 'bold' }}>{tripInfo.name}</p>\r\n                            <p>주소: {tripInfo.address}</p>\r\n                            <p>{tripInfo.time}</p>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* 추가 위치들 표시 */}\r\n                {tripInfo.additionalLocations && tripInfo.additionalLocations.map((location, index) => (\r\n                    <div key={index} style={{ display: 'flex', marginBottom: '15px', border: '1px solid #ddd', padding: '10px', borderRadius: '8px' }}>  \r\n                        <div className='Location-img'>\r\n                        <img src={location.image} alt={location.name} style={{objectFit: 'cover', width: '170px', height: '150px', borderRadius: '8px' }} />\r\n                        </div>\r\n                        <div className='Tripsub-info-list'>\r\n                        <p style={{ fontWeight: 'bold' }}>{location.name}</p>\r\n                        <p>주소: {location.address}</p>\r\n                        <p>{location.time}</p>\r\n                        </div>\r\n                      \r\n                    </div>\r\n                ))}\r\n                \r\n                <button className=\"Tripsub-button\" style={{ width: '100%', padding: '10px', backgroundColor: '#007bff', color: '#fff', border: 'none', borderRadius: '8px', cursor: 'pointer' }} onClick={homeButton}>\r\n                    나가기\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tripsub;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}