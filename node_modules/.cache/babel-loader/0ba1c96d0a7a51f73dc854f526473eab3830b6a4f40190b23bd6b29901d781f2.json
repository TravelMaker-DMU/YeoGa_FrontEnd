{"ast":null,"code":"import React from'react';import{Navigate}from'react-router-dom';import{jwtDecode}from'jwt-decode';// 여기 수정\nimport{jsx as _jsx}from\"react/jsx-runtime\";const PrivateRoute=_ref=>{let{children}=_ref;const token=sessionStorage.getItem('accessToken');if(!token){return/*#__PURE__*/_jsx(Navigate,{to:\"/Login\"});}try{const decoded=jwtDecode(token);console.log(decoded);}catch(error){console.error('Invalid token:',error);return/*#__PURE__*/_jsx(Navigate,{to:\"/Login\"});}return children;};export default PrivateRoute;","map":{"version":3,"names":["React","Navigate","jwtDecode","jsx","_jsx","PrivateRoute","_ref","children","token","sessionStorage","getItem","to","decoded","console","log","error"],"sources":["C:/Users/user/YeoGa_FrontEnd/src/components/Protected Route/Protected.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode'; // 여기 수정\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n  const token = sessionStorage.getItem('accessToken');\r\n\r\n  if (!token) {\r\n    return <Navigate to=\"/Login\" />;\r\n  }\r\n\r\n  try {\r\n    const decoded = jwtDecode(token);\r\n    console.log(decoded); \r\n  } catch (error) {\r\n    console.error('Invalid token:', error);\r\n    return <Navigate to=\"/Login\" />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,SAAS,KAAQ,YAAY,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAExC,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAChC,KAAM,CAAAE,KAAK,CAAGC,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC,CAEnD,GAAI,CAACF,KAAK,CAAE,CACV,mBAAOJ,IAAA,CAACH,QAAQ,EAACU,EAAE,CAAC,QAAQ,CAAE,CAAC,CACjC,CAEA,GAAI,CACF,KAAM,CAAAC,OAAO,CAAGV,SAAS,CAACM,KAAK,CAAC,CAChCK,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC,CACtB,CAAE,MAAOG,KAAK,CAAE,CACdF,OAAO,CAACE,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACtC,mBAAOX,IAAA,CAACH,QAAQ,EAACU,EAAE,CAAC,QAAQ,CAAE,CAAC,CACjC,CAEA,MAAO,CAAAJ,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}